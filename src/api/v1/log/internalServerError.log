
 ================== ۱۴۰۱-۱۰-۲۲ ۱۷:۳۸:۴۳ ب ظ ================== 
Cannot destructure property 'id' of 'req[groupModelName]' as it is undefined.
 ================== ۱۴۰۱-۱۰-۲۲ ۱۷:۳۹:۰۳ ب ظ ================== 

Invalid `prisma[modelName].delete()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\helpers\prisma.js:108:53

  105     select,
  106   })
  107 } else {
→ 108   deletedRecord = await prisma[modelName].delete({
          where: {
            teamId: 53,
            ~~~~~~
            groupId: 1
            ~~~~~~~
          }
          ~~~~~~~~~~~~~
        })

Argument where of type GroupMemberWhereUniqueInput needs exactly one argument, but you provided teamId and groupId. Please choose one. Available args: 
type GroupMemberWhereUniqueInput {
  id?: Int
}
Unknown arg `teamId` in where.teamId for type GroupMemberWhereUniqueInput. Did you mean `id`? Available args:
type GroupMemberWhereUniqueInput {
  id?: Int
}
Unknown arg `groupId` in where.groupId for type GroupMemberWhereUniqueInput. Available args:

type GroupMemberWhereUniqueInput {
  id?: Int
}


 ================== ۱۴۰۱-۱۰-۲۲ ۱۷:۳۹:۵۰ ب ظ ================== 

Invalid `prisma[modelName].delete()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\helpers\prisma.js:108:53

  105     select,
  106   })
  107 } else {
→ 108   deletedRecord = await prisma[modelName].delete({
          where: {
            teamId: 53,
            ~~~~~~
            groupId: 1
            ~~~~~~~
          }
          ~~~~~~~~~~~~~
        })

Argument where of type GroupMemberWhereUniqueInput needs exactly one argument, but you provided teamId and groupId. Please choose one. Available args: 
type GroupMemberWhereUniqueInput {
  id?: Int
}
Unknown arg `teamId` in where.teamId for type GroupMemberWhereUniqueInput. Did you mean `id`? Available args:
type GroupMemberWhereUniqueInput {
  id?: Int
}
Unknown arg `groupId` in where.groupId for type GroupMemberWhereUniqueInput. Available args:

type GroupMemberWhereUniqueInput {
  id?: Int
}


 ================== ۱۴۰۱-۱۰-۲۲ ۱۷:۵۱:۵۱ ب ظ ================== 
Cannot read properties of null (reading 'isDeported')
 ================== ۱۴۰۱-۱۰-۲۲ ۱۷:۵۲:۱۷ ب ظ ================== 
Cannot read properties of null (reading 'isDeported')
 ================== ۱۴۰۱-۱۰-۲۲ ۱۷:۵۲:۴۲ ب ظ ================== 

Invalid `groupMember.create()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\prismaQuery\group.js:90:38

  87 
  88 module.exports.joinToTheGroup = async (groupId, teamId) => {
  89   try {
→ 90     const result = await groupMember.create({
           data: {
             groupId: 1,
             teamId: 53,
         +   role: Admin | Deputy | Normal,
         ?   id?: Int,
         ?   isDeported?: Boolean
           }
         })

Argument role for data.role is missing.

Note: Lines with + are required, lines with ? are optional.

 ================== ۱۴۰۱-۱۰-۲۲ ۱۷:۵۲:۴۷ ب ظ ================== 

Invalid `groupMember.create()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\prismaQuery\group.js:90:38

  87 
  88 module.exports.joinToTheGroup = async (groupId, teamId) => {
  89   try {
→ 90     const result = await groupMember.create({
           data: {
             groupId: 1,
             teamId: 53,
         +   role: Admin | Deputy | Normal,
         ?   id?: Int,
         ?   isDeported?: Boolean
           }
         })

Argument role for data.role is missing.

Note: Lines with + are required, lines with ? are optional.

 ================== ۱۴۰۱-۱۰-۲۲ ۱۷:۵۲:۵۸ ب ظ ================== 

Invalid `groupMember.create()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\prismaQuery\group.js:90:38

  87 
  88 module.exports.joinToTheGroup = async (groupId, teamId) => {
  89   try {
→ 90     const result = await groupMember.create({
           data: {
             groupId: 1,
             teamId: 53,
         +   role: Admin | Deputy | Normal,
         ?   id?: Int,
         ?   isDeported?: Boolean
           }
         })

Argument role for data.role is missing.

Note: Lines with + are required, lines with ? are optional.

 ================== ۱۴۰۱-۱۰-۲۲ ۱۸:۰۹:۳۳ ب ظ ================== 

Invalid `group.update()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\prismaQuery\group.js:47:17

  44 
  45 module.exports.givingDeputyPosition = async (groupId, memberId) => {
  46   try {
→ 47     await group.update(
An operation failed because it depends on one or more records that were required but not found. No 'GroupMember' record was found for a nested update on relation 'GroupToGroupMember'.
 ================== ۱۴۰۱-۱۰-۲۲ ۱۸:۰۹:۵۵ ب ظ ================== 

Invalid `group.update()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\prismaQuery\group.js:47:17

  44 
  45 module.exports.givingDeputyPosition = async (groupId, memberId) => {
  46   try {
→ 47     await group.update(
An operation failed because it depends on one or more records that were required but not found. No 'GroupMember' record was found for a nested update on relation 'GroupToGroupMember'.
 ================== ۱۴۰۱-۱۰-۲۲ ۱۸:۴۲:۱۷ ب ظ ================== 
Cannot read properties of undefined (reading 'id')
 ================== ۱۴۰۱-۱۰-۲۲ ۱۸:۴۲:۳۲ ب ظ ================== 
Cannot read properties of undefined (reading 'id')
 ================== ۱۴۰۱-۱۰-۲۲ ۱۸:۴۳:۱۱ ب ظ ================== 
Cannot read properties of undefined (reading 'id')
 ================== ۱۴۰۱-۱۰-۲۲ ۱۸:۴۳:۴۵ ب ظ ================== 
Cannot read properties of undefined (reading 'id')
 ================== ۱۴۰۱-۱۰-۲۲ ۱۸:۴۳:۵۵ ب ظ ================== 
Cannot read properties of undefined (reading 'id')
 ================== ۱۴۰۱-۱۰-۲۲ ۲۱:۴۹:۲۳ ب ظ ================== 

Invalid `prisma[modelName].findFirst()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\helpers\prisma.js:43:43

  40 try {
  41   let result
  42   if (select) result = await prisma[modelName].findFirst({ where, select })
→ 43   else result = await prisma[modelName].findFirst({
         where: {
           groupId: '1',
                    ~~~
           teamId: 53
         }
       })

Argument groupId: Got invalid value '1' on prisma.findFirstGroupMember. Provided String, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int>
  notIn?: List<Int>
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int>
  notIn?: List<Int>
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


 ================== ۱۴۰۱-۱۰-۲۲ ۲۱:۴۹:۴۴ ب ظ ================== 

Invalid `prisma[modelName].findFirst()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\helpers\prisma.js:43:43

  40 try {
  41   let result
  42   if (select) result = await prisma[modelName].findFirst({ where, select })
→ 43   else result = await prisma[modelName].findFirst({
         where: {
           groupId: '1',
                    ~~~
           teamId: 53
         }
       })

Argument groupId: Got invalid value '1' on prisma.findFirstGroupMember. Provided String, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int>
  notIn?: List<Int>
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int>
  notIn?: List<Int>
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


 ================== ۱۴۰۱-۱۰-۲۲ ۲۱:۵۰:۰۹ ب ظ ================== 

Invalid `prisma[modelName].findFirst()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\helpers\prisma.js:43:43

  40 try {
  41   let result
  42   if (select) result = await prisma[modelName].findFirst({ where, select })
→ 43   else result = await prisma[modelName].findFirst({
         where: {
           groupId: '1',
                    ~~~
           teamId: 53
         }
       })

Argument groupId: Got invalid value '1' on prisma.findFirstGroupMember. Provided String, expected IntFilter or Int:
type IntFilter {
  equals?: Int
  in?: List<Int>
  notIn?: List<Int>
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}
type IntFilter {
  equals?: Int
  in?: List<Int>
  notIn?: List<Int>
  lt?: Int
  lte?: Int
  gt?: Int
  gte?: Int
  not?: Int | NestedIntFilter
}


 ================== ۱۴۰۱-۱۰-۲۲ ۲۱:۵۱:۰۹ ب ظ ================== 

Invalid `prisma[modelName].update()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\helpers\prisma.js:78:51

  75 
  76 module.exports.update = async (modelName, where, data) => {
  77   try {
→ 78     const updatedRecord = await prisma[modelName].update({
           where: {
             groupId: 1,
             ~~~~~~~
             teamId: NaN
             ~~~~~~
           },
           ~~~~~~~~~~~~~
           data: {
             isDeported: true
           }
         })

Argument where of type GroupMemberWhereUniqueInput needs exactly one argument, but you provided groupId and teamId. Please choose one. Available args: 
type GroupMemberWhereUniqueInput {
  id?: Int
}
Unknown arg `groupId` in where.groupId for type GroupMemberWhereUniqueInput. Available args:

type GroupMemberWhereUniqueInput {
  id?: Int
}
Unknown arg `teamId` in where.teamId for type GroupMemberWhereUniqueInput. Did you mean `id`? Available args:
type GroupMemberWhereUniqueInput {
  id?: Int
}


 ================== ۱۴۰۱-۱۰-۲۲ ۲۱:۵۲:۰۸ ب ظ ================== 

Invalid `prisma[modelName].update()` invocation in
G:\FootballManager\football-manager-server\src\api\v1\helpers\prisma.js:78:51

  75 
  76 module.exports.update = async (modelName, where, data) => {
  77   try {
→ 78     const updatedRecord = await prisma[modelName].update({
           where: {
             groupId: 1,
             ~~~~~~~
             teamId: 58
             ~~~~~~
           },
           ~~~~~~~~~~~~~
           data: {
             isDeported: true
           }
         })

Argument where of type GroupMemberWhereUniqueInput needs exactly one argument, but you provided groupId and teamId. Please choose one. Available args: 
type GroupMemberWhereUniqueInput {
  id?: Int
}
Unknown arg `groupId` in where.groupId for type GroupMemberWhereUniqueInput. Available args:

type GroupMemberWhereUniqueInput {
  id?: Int
}
Unknown arg `teamId` in where.teamId for type GroupMemberWhereUniqueInput. Did you mean `id`? Available args:
type GroupMemberWhereUniqueInput {
  id?: Int
}

